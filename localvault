#!/bin/bash
set -e

VAULT_DIR=$HOME/localvault
CONTAINER=localvault
VAULT="docker exec $CONTAINER"

case $1 in 
	create )
		docker volume inspect vault-file >/dev/null 2>&1 && (echo create failed: localvault already exists; exit -1)
		docker volume create vault-file
		docker volume create vault-logs
		;;

	init ) $VAULT vault operator init;;

	destroy )
		read -p "Are you sure you want to *DESTROY* the localvault ? (y/n) " -n 1 -r
		echo
		if [[ ! $REPLY =~ ^[Yy]$ ]]
		then
			echo Okay, not destroying.
		else
			docker stop localvault || echo stop localvault failed
			docker rm -f localvault || echo rm -f localvault failed 
			docker volume rm vault-file || echo rm vault-file failed
			docker volume rm vault-logs || echo rm vault-logs failed
    		fi
		;;

	start ) 
		cd $VAULT_DIR
	       	sudo docker-compose up -d
	       	docker-compose start
		;;

	stop ) cd $VAULT_DIR; sudo docker-compose down;;

	status ) $VAULT vault status;;

	unseal ) $VAULT vault operator unseal $2;;

	vault ) $VAULT $*;;

	exec ) docker exec -i $CONTAINER /bin/sh -l -c "$2";;

	shell ) docker exec -it $CONTAINER /bin/sh -l;;

	seal ) $VAULT vault operator seal;;

	backup )
		FILENAME=backup-$(date +%Y%M%D-%h%m%s).tgz
		echo Writing vault data to $FILENAME...
		docker exec -i $CONTAINER /bin/sh -l -c "tar zc -C /vault -p ." >$FILENAME
		echo Done
		;;

	restore )
		FILENAME=$2
		echo Restoring vault data from $FILENAME...
		docker exec -i $CONTAINER /bin/sh -l -c "tar zx -C /vault" <$FILENAME
		;;

	write-unseal-script )
		awk <$2 >$3 'BEGIN{print "#!/bin/sh"} /^Unseal Key .:/{if(NR<=3) print "localvault unseal " $4}'
		chmod +x $3
		;;

	write-login-script )
		awk <$2 >$3 'BEGIN{print "#!/bin/sh"} /^Initial Root Token:/{print "localvault vault login " $4}'
		chmod +x $3
		;;

	usage|help )
       		cat <<EOF 
Usage:  $0 COMMAND

Where COMMAND is: 
	create                 create new vault
	init                   initialize vault, generating keys and root token
	destroy                delete all localvault data
	start                  start vault container
	stop                   stop and seal vault container
	status                 output vault status
	unseal KEY             unseal vault with key (3 keys required to unseal)
	vault ARG [...]        run vault CLI command
	exec 'CMDLINE'         execute shell command in the vault container
	shell                  interactive shell session in vault container
	seal                   seal vault
EOF
	;;

	*)
		echo "Unknown command: $@"
		;;
esac

